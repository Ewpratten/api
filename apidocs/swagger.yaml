swagger: "2.0"
info:
  description: "The API powering many RetryLife projects, and some other projects made by friends"
  version: "1.0.0"
  title: "RetryLife API"
  contact:
    email: "ewpratten@retrylife.ca"
# host: "api.retrylife.ca"
basePath: "/"
schemes:
- "https"
- "http"
paths:
  /tvdsb/student/auth:
    post:
      summary: "Get a TVDSB API Token from a student user id and password"
      tags:
        - TVDSB Student
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "formData"
        description: "Student user ID used to log into network computers"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "Student password used to log into network computers"
        required: true
        type: "string"
      responses:
        200:
          description: "Auth token info"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              token:
                type: string
                example: XNlcm5hbWVxA1gLAAAAc
        401:
          description: "Invalid login"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "invalid login"
  /tvdsb/student/attendance:
    get:
      summary: "Get a student's attengance records for the current year"
      tags:
        - TVDSB Student
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "query"
        description: "TVDSB Student API Token"
        required: true
        type: "string"
      responses:
        200:
          description: "Student attendance information"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              records:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    course_code:
                      type: string
                    date:
                      type: string
                    period:
                      type: integer
                    reason:
                      type: string
        401:
          description: "Invalid login"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "invalid login"
  /tvdsb/student/marks:
    get:
      summary: "Get a student's complete mark history"
      tags:
        - TVDSB Student
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "query"
        description: "TVDSB Student API Token"
        required: true
        type: "string"
      responses:
        200:
          description: "Student mark history"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              marks:
                type: object
                description: "This will contain a key for every year"
                additionalProperties:
                  type: array
                  items:
                    type: object
                    properties:
                      comment:
                        type: string
                      course:
                        type: string
                      date:
                        type: string
                      mark:
                        type: integer
                      skills:
                        type: object
                        properties:
                          homework:
                            type: string
                          independence:
                            type: string
                          initiative:
                            type: string
                          organization: 
                            type: string
                          teamwork: 
                            type: string
        401:
          description: "Invalid login"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "invalid login"
  /tvdsb/student/timetable:
    get:
      summary: "Get a student's current and/or upcoming timetable (depends on time of year)"
      tags:
        - TVDSB Student
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "query"
        description: "TVDSB Student API Token"
        required: true
        type: "string"
      responses:
        200:
          description: "Student timetable information"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              timetable:
                type: object
                properties:
                  student_info:
                    type: object
                    properties:
                      grade:
                        type: integer
                      locker_number:
                        type: integer
                      ontario_education_number:
                        type: integer
                      student_number:
                        type: integer
                      name:
                        type: array
                        items:
                          type: string
                  course_semesters:
                    type: array
                    items:
                      type: array
                      items:
                        type: object
                        properties: 
                          course_code:
                            type: string
                          period:
                            type: integer
                          start_time:
                            type: integer
                          end_time:
                            type: integer
        401:
          description: "Invalid login"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "invalid login"
  /tvdsb/student/payment:
    get:
      summary: "Get a student's payment info"
      tags:
        - TVDSB Student
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "query"
        description: "TVDSB Student API Token"
        required: true
        type: "string"
      responses:
        200:
          description: "Student payment information"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              info:
                type: object
                properties:
                  pin:
                    type: string
        401:
          description: "Invalid login"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "invalid login"
  /frc/5024/lib5k/version:
    get:
      summary: "Get the latest Lib5K version info"
      tags:
        - Raider Robotics
      produces:
      - "application/json"
      responses:
        200:
          description: "Lib5K version information"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              version:
                type: string
              date:
                type: string
              changelog:
                type: string
  /deviantart/{user}/content:
    get:
      summary: "Get a list of posts from a DeviantArt user"
      tags:
        - DeviantArt
      produces:
      - "application/json"
      parameters:
        - name: "user"
          in: "path"
          description: "DeviantArt username"
          required: true
          type: string
      responses:
        200:
          description: "DeviantArt user posts"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      username:
                        type: string
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        media: 
                          type: array
                          items:
                            type: object
                            properties:
                              height:
                                type: string
                              width: 
                                type: string
                              medium:
                                type: string
                              url:
                                type: string
                        nsfw:
                          type: boolean
                        title:
                          type: string
                        url:
                          type: string
  /snapchat/{user}/snapcode.png:
    get:
      summary: "Get the snapcode for a Snapchat account as a PNG"
      tags:
        - Snapchat
      produces:
      - "image/png"
      parameters:
        - name: "user"
          in: "path"
          description: "Snapchat username"
          required: true
          type: string
      responses:
        200:
          description: "User snapcode"
          schema:
            type: file
  /snapchat/{user}/snapcode.svg:
    get:
      summary: "Get the snapcode for a Snapchat account as an SVG"
      tags:
        - Snapchat
      produces:
      - "image/svg"
      parameters:
        - name: "user"
          in: "path"
          description: "Snapchat username"
          required: true
          type: string
      responses:
        200:
          description: "User snapcode"
          schema:
            type: file
  /status:
    get:
      summary: "Get the statuses of all RetryLife services, and related services"
      produces:
      - "application/json"
      tags:
        - RetryLife
      responses:
        200:
          description: "Status info"
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              services:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    ok:
                      type: boolean
                    message:
                      type: string